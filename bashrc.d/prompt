# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

function empty_git_ps1()
{
    echo -n ''
}

function set_prompt()
{
    local color_prompt

    _bash_history_sync

    # uncomment for a colored prompt, if the terminal has the capability; turned
    # off by default to not distract the user: the focus in a terminal window
    # should be on the output of commands, not on the prompt
    local force_color_prompt=yes

    # set a fancy prompt (non-color, unless we know we "want" color)
    case "$TERM" in
        xterm-color) color_prompt=yes;;
    esac

    if [ -n "$force_color_prompt" ]; then
        if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
            # We have color support; assume it's compliant with Ecma-48
            # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
            # a case would tend to support setf rather than setaf.)
            color_prompt=yes
        else
            color_prompt=
        fi
    fi

    if [ -e /usr/share/git/completion/git-prompt.sh ]; then
        source /usr/share/git/completion/git-prompt.sh
        local git_ps1=__git_ps1
    else
        local git_ps1=empty_git_ps1
    fi

    PS1="\[\033[G\]"

    case "$TERM" in
        xterm*|rxvt*|screen*)
            PS1+="\[\e]0;\u@\h:\w\]"

            local tor

            if [[ $TOR == 1 ]]
            then
                tor="[tor] "
            fi

            PS1+="\[\e]0;$tor\u@\h:\w\]"
        ;;
    esac

    if [ "$TOR" = "1" ]
    then
        PS1+="\033[1;35m(\033[1;32m.\033[1;35m)\033[0m "
    fi

    if [ "$color_prompt" = yes ]; then
        PS1+="\[\033[01;37m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\[\033[32m\]\$($git_ps1)\[\e[0m\]"
        PS1+="\$(if [[ \$? != 0 ]]; then echo '\[\033[01;31m\]'; fi)\$\[\033[00m\] "
    else
        PS1+="\u@\h:\w\$($git_ps1)\$ "
    fi
}
export PROMPT_COMMAND='set_prompt'
