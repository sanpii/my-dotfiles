snippet menu_item "menu_item"
$items['${1}'] = array(
	'title' => '${2:Page title}',
	'page callback' => '${3:callback_function}',
	'page arguments' => array(${4}),
	'access arguments' => array('${5:View published content}'),
	'type' => ${6:MENU_NORMAL_ITEM}, // MENU_CALLBACK, MENU_LOCAL_TASK, MENU_DEFAULT_LOCAL_TASK, MENU_LOCAL_ACTION, MENU_SUGGESTED_ITEM,
	// 'file' => ${7:`!p snip.rv = snip.basename`.pages.inc},
);${8}
endsnippet

snippet block_item "block_item"
$blocks['${1:machine_name}'] = array(
	'info' => t('${2:Name for Admins}'),${3}
	'cache' => DRUPAL_CACHE_PER_ROLE, //DRUPAL_NO_CACHE, DRUPAL_CACHE_GLOBAL, DRUPAL_CACHE_PER_USER, DRUPAL_CACHE_PER_PAGE,
	// 'properties' => array('administrative' => TRUE),
	// 'weight' => 0,
	// 'status' => 1, // 1 = enabled, 0 = disabled
	// 'region' => 'content',
	// 'visibility' => BLOCK_VISIBILITY_LISTED,
	// 'pages' => $pages_string,
);
endsnippet

snippet t "Drupal t()."
t('${1:msg}')${2}
endsnippet

snippet h_simpletest_alter "h_simpletest_alter"
/**
 * Implements hook_simpletest_alter().
 */
function `!p snip.rv = snip.basename`_simpletest_alter(&$groups)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_test_group_started "h_test_group_started"
/**
 * Implements hook_test_group_started().
 */
function `!p snip.rv = snip.basename`_test_group_started()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_test_group_finished "h_test_group_finished"
/**
 * Implements hook_test_group_finished().
 */
function `!p snip.rv = snip.basename`_test_group_finished()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_test_finished "h_test_finished"
/**
 * Implements hook_test_finished().
 */
function `!p snip.rv = snip.basename`_test_finished($results)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_aggregator_fetch "h_aggregator_fetch"
/**
 * Implements hook_aggregator_fetch().
 */
function `!p snip.rv = snip.basename`_aggregator_fetch($feed)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_aggregator_fetch_info "h_aggregator_fetch_info"
/**
 * Implements hook_aggregator_fetch_info().
 */
function `!p snip.rv = snip.basename`_aggregator_fetch_info()
{
	return array(
		'title' => t('${1}'),
		'description' => t('${2}'),
	);
}
endsnippet

snippet h_aggregator_parse "h_aggregator_parse"
/**
 * Implements hook_aggregator_parse().
 */
function `!p snip.rv = snip.basename`_aggregator_parse($feed)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_aggregator_parse_info "h_aggregator_parse_info"
/**
 * Implements hook_aggregator_parse_info().
 */
function `!p snip.rv = snip.basename`_aggregator_parse_info()
{
	return array(
		'title' => t('${1}'),
		'description' => t('${2}'),
	);
}
endsnippet

snippet h_aggregator_process "h_aggregator_process"
/**
 * Implements hook_aggregator_process().
 */
function `!p snip.rv = snip.basename`_aggregator_process($feed)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_aggregator_process_info "h_aggregator_process_info"
/**
 * Implements hook_aggregator_process_info().
 */
function `!p snip.rv = snip.basename`_aggregator_process_info($feed)
{
	return array(
		'title' => t('${1}'),
		'description' => t('${2}'),
	);
}
endsnippet

snippet h_aggregator_remove "h_aggregator_remove"
/**
 * Implements hook_aggregator_remove().
 */
function `!p snip.rv = snip.basename`_aggregator_remove($feed)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_overlay_parent_initialize "h_overlay_parent_initialize"
/**
 * Implements hook_overlay_parent_initialize().
 */
function `!p snip.rv = snip.basename`_overlay_parent_initialize()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_overlay_child_initialize "h_overlay_child_initialize"
/**
 * Implements hook_overlay_child_initialize().
 */
function `!p snip.rv = snip.basename`_overlay_child_initialize()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_entity_info "h_entity_info"
/**
 * Implements hook_entity_info().
 */
function `!p snip.rv = snip.basename`_entity_info()
{
		'${1}' => array(
			'label' => t('${2}'),
			'controller class' => '${3}',
			'base table' => '${4}',
			'revision table' => '${5}',
			'uri callback' => '${6}',
			'fieldable' => ${7},
			'translation' => array(
				'locale' => ${8},
			),
			'entity keys' => array(
				'id' => '${9}',
				'revision' => '${10}',
				'bundle' => '${11}',
			),
			'bundle keys' => array(
				'bundle' => '${12}',
			),
			'bundles' => array(),
			'view modes' => array(
				'${13}' => array(
					'label' => t('${14}'),
					'custom settings' => ${15},
				),
			),
		),
	);
	return $return;
}
endsnippet

snippet h_entity_info_alter "h_entity_info_alter"
/**
 * Implements hook_entity_info_alter().
 */
function `!p snip.rv = snip.basename`_entity_info_alter(&$entity_info)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_entity_load "h_entity_load"
/**
 * Implements hook_entity_load().
 */
function `!p snip.rv = snip.basename`_entity_load($entities, $type)
{
	foreach ($entities as $entity) {
		$entity->${1} = mymodule_add_something($entity, $type);
	}
}
endsnippet

snippet h_entity_insert "h_entity_insert"
/**
 * Implements hook_entity_insert().
 */
function `!p snip.rv = snip.basename`_entity_insert($entity, $type)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_entity_update "h_entity_update"
/**
 * Implements hook_entity_update().
 */
function `!p snip.rv = snip.basename`_entity_update($entity, $type)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_entity_query_alter "h_entity_query_alter"
/**
 * Implements hook_entity_query_alter().
 */
function `!p snip.rv = snip.basename`_entity_query_alter($query)
{
	$query->${1} = '`!p snip.rv = snip.basename`_query_callback';
}
endsnippet

snippet h_admin_paths "h_admin_paths"
/**
 * Implements hook_admin_paths().
 */
function `!p snip.rv = snip.basename`_admin_paths()
{
	$paths = array(
		${1:/* Your code here */}
	);
	return $paths;
}
endsnippet

snippet h_admin_paths_alter "h_admin_paths_alter"
/**
 * Implements hook_admin_paths_alter().
 */
function `!p snip.rv = snip.basename`_admin_paths_alter(&$paths)
{
	$paths['${1}'] = ${2};
}
endsnippet

snippet h_entity_prepare_view "h_entity_prepare_view"
/**
 * Implements hook_entity_prepare_view().
 */
function `!p snip.rv = snip.basename`_entity_prepare_view($entities, $type)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_cron "h_cron"
/**
 * Implements hook_cron().
 */
function `!p snip.rv = snip.basename`_cron()
{
	 ${1:/* Your code here */}
}
endsnippet

snippet h_cron_queue_info "h_cron_queue_info"
/**
 * Implements hook_cron_queue_info().
 */
function `!p snip.rv = snip.basename`_cron_queue_info()
{
	$queues['${1}'] = array(
		'worker callback' => '${2}',
		'time' => ${3},
	);
	return $queues;
}
endsnippet

snippet h_cron_queue_info_alter "h_cron_queue_info_alter"
/**
 * Implements hook_cron_queue_info_alter().
 */
function `!p snip.rv = snip.basename`_cron_queue_info_alter(&$queues)
{
	$queues['${1}']['time'] = ${2};
}
endsnippet

snippet h_element_info "h_element_info"
/**
 * Implements hook_element_info().
 */
function `!p snip.rv = snip.basename`_element_info()
{
	$types['${1}'] = array(
		${2:/* Your code here */}
	);
	return $types;
}
endsnippet

snippet h_element_info_alter "h_element_info_alter"
/**
 * Implements hook_element_info_alter().
 */
function `!p snip.rv = snip.basename`_element_info_alter(&$type)
{
	if (isset($type['${1}'])) {
		$type['${2}'] = ${3};
	}
}
endsnippet

snippet h_exit "h_exit"
/**
 * Implements hook_exit().
 */
function `!p snip.rv = snip.basename`_exit($destination = NULL)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_js_alter "h_js_alter"
/**
 * Implements hook_js_alter().
 */
function `!p snip.rv = snip.basename`_js_alter(&$javascript)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_library "h_library"
/**
 * Implements hook_library().
 */
function `!p snip.rv = snip.basename`_library()
{
	$libraries['${1}'] = array(
		'title' => '${2}',
		'website' => '${3}',
		'version' => '${4}',
		'js' => array(
			drupal_get_path('module', '`!p snip.rv = snip.basename`') . '/${5}' => array(),
		),
		'css' => array(
			drupal_get_path('module', '`!p snip.rv = snip.basename`') . '/${6}' => array(
				'type' => 'file',
				'media' => '${7}',
			),
		),
		'dependencies' => array(
			array('system', 'ui'),
		),
	);
	return $libraries;
}
endsnippet

snippet h_library_alter "h_library_alter"
/**
 * Implements hook_library_alter().
 */
function `!p snip.rv = snip.basename`_library_alter(&$libraries, $module)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_css_alter "h_css_alter"
/**
 * Implements hook_css_alter().
 */
function `!p snip.rv = snip.basename`_css_alter(&$css)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_ajax_render_alter "h_ajax_render_alter"
/**
 * Implements hook_ajax_render_alter().
 */
function `!p snip.rv = snip.basename`_ajax_render_alter($commands)
{
	$commands[] = ${1}
}
endsnippet

snippet h_page_build "h_page_build"
/**
 * Implements hook_page_build().
 */
function `!p snip.rv = snip.basename`_page_build(&$page)
{
	$page['${1}']['${2}'] = array(
		'#markup' => t('${3}'),
		'#weight' => ${4},
	);
}
endsnippet

snippet h_menu "h_menu"
/**
 * Implements hook_menu().
 */
function `!p snip.rv = snip.basename`_menu()
{
	$items['${1}'] = array(
		'title' => '${2}',
		'page callback' => '${3}',
		'page arguments' => array(${4}),
		'access arguments' => array('${5}'),
		'type' => ${6},
		'file' => ${7},${8}
	);
	return $items;
}
endsnippet

snippet h_menu_alter "h_menu_alter"
/**
 * Implements hook_menu_alter().
 */
function `!p snip.rv = snip.basename`_menu_alter(&$items)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_menu_link_alter "h_menu_link_alter"
/**
 * Implements hook_menu_link_alter().
 */
function `!p snip.rv = snip.basename`_menu_link_alter(&$item)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_translated_menu_link_alter "h_translated_menu_link_alter"
/**
 * Implements hook_translated_menu_link_alter().
 */
function `!p snip.rv = snip.basename`_translated_menu_link_alter(&$item, $map)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_menu_link_insert "h_menu_link_insert"
/**
 * Implements hook_menu_link_insert().
 */
function `!p snip.rv = snip.basename`_menu_link_insert($link)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_menu_link_update "h_menu_link_update"
/**
 * Implements hook_menu_link_update().
 */
function `!p snip.rv = snip.basename`_menu_link_update($link)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_menu_link_delete "h_menu_link_delete"
/**
 * Implements hook_menu_link_delete().
 */
function `!p snip.rv = snip.basename`_menu_link_delete($link)
{
	db_delete('${1}')
		->condition('mlid', $link['mlid'])
		->execute();
}
endsnippet

snippet h_menu_local_tasks_alter "h_menu_local_tasks_alter"
/**
 * Implements hook_menu_local_tasks_alter().
 */
function `!p snip.rv = snip.basename`_menu_local_tasks_alter(&$data, $router_item, $root_path)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_menu_breadcrumb_alter "h_menu_breadcrumb_alter"
/**
 * Implements hook_menu_breadcrumb_alter().
 */
function `!p snip.rv = snip.basename`_menu_breadcrumb_alter(&$active_trail, $item)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_menu_contextual_links_alter "h_menu_contextual_links_alter"
/**
 * Implements hook_menu_contextual_links_alter().
 */
function `!p snip.rv = snip.basename`_menu_contextual_links_alter(&$links, $router_item, $root_path)
{
	if ($root_path == '${1}') {
		$links['${2}'] = array(
			'title' => t('${3}'),
			'href' => '${4}',
			'localized_options' => array(
				'query' => array(
					'${5}' => '${6}',
				),
			),
		);
	}
}
endsnippet

snippet h_page_alter "h_page_alter"
/**
 * Implements hook_page_alter().
 */
function `!p snip.rv = snip.basename`_page_alter(&$page)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_form_alter "h_form_alter"
/**
 * Implements hook_form_alter().
 */
function `!p snip.rv = snip.basename`_form_alter(&$form, &$form_state, $form_id)
{
	$form['${1}']${2} = array(
		'#type' => '${3}',
		'#title' => t('${4}'),
		'#default_value' => $settings['${5}'],
		'#required' => ${6},
		'#element_validate' => array('${7}'),
		'#description' => t('${8}'),${9}
	);
}
endsnippet

snippet h_forms "h_forms"
/**
 * Implements hook_forms().
 */
function `!p snip.rv = snip.basename`_forms($form_id, $args)
{
	$forms['${1}'] = array(
		'callback' => '${2}',
		'callback arguments' => array('${3}'),
	);
	return $forms;
}
endsnippet

snippet h_boot "h_boot"
/**
 * Implements hook_boot().
 */
function `!p snip.rv = snip.basename`_boot()
{
	 ${1:/* Your code here */}
}
endsnippet

snippet h_init "h_init"
/**
 * Implements hook_init().
 */
function `!p snip.rv = snip.basename`_init()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_image_toolkits "h_image_toolkits"
/**
 * Implements hook_image_toolkits().
 */
function `!p snip.rv = snip.basename`_image_toolkits()
{
	return array(
		'${1}' => array(
			'title' => t('${2}'),
			'available' => TRUE,
		),
	);
}
endsnippet

snippet h_mail_alter "h_mail_alter"
/**
 * Implements hook_mail_alter().
 */
function `!p snip.rv = snip.basename`_mail_alter(&$message)
{
	if ($message['id'] == '${1}') {
		$message['body'][] = "${2}";
	}
}
endsnippet

snippet h_module_implements_alter "h_module_implements_alter"
/**
 * Implements hook_module_implements_alter().
 */
function `!p snip.rv = snip.basename`_module_implements_alter(&$implementations, $hook)
{
	if ($hook == '${1}') {
		${2:/* Your code here */}
	}
}
endsnippet

snippet h_system_info_alter "h_system_info_alter"
/**
 * Implements hook_system_info_alter().
 */
function `!p snip.rv = snip.basename`_system_info_alter(&$info, $file, $type)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_permission "h_permission"
/**
 * Implements hook_permission().
 */
function `!p snip.rv = snip.basename`_permission()
{
	return array(
		'${1}' =>	array(
			'title' => t('${2}'),
			'description' => t('${3}'),
		),
	);
}
endsnippet

snippet h_theme "h_theme"
/**
 * Implements hook_theme().
 */
function `!p snip.rv = snip.basename`_theme($existing, $type, $theme, $path)
{
	return array(
		'${1}' => array(
			'render element' => '${2}',
			'file' => '${3}',
			'variables' => array('${4}' => NULL, '${5}' => NULL${6}),
		),
	);
}
endsnippet

snippet h_theme_registry_alter "h_theme_registry_alter"
/**
 * Implements hook_theme_registry_alter().
 */
function `!p snip.rv = snip.basename`_theme_registry_alter(&$theme_registry)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_custom_theme "h_custom_theme"
/**
 * Implements hook_custom_theme().
 */
function `!p snip.rv = snip.basename`_custom_theme()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_xmlrpc "h_xmlrpc"
/**
 * Implements hook_xmlrpc().
 */
function `!p snip.rv = snip.basename`_xmlrpc()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_xmlrpc_alter "h_xmlrpc_alter"
/**
 * Implements hook_xmlrpc_alter().
 */
function `!p snip.rv = snip.basename`_xmlrpc_alter(&$methods)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_watchdog "h_watchdog"
/**
 * Implements hook_watchdog().
 */
function `!p snip.rv = snip.basename`_watchdog(array $log_entry)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_mail "h_mail"
/**
 * Implements hook_mail().
 */
function `!p snip.rv = snip.basename`_mail($key, &$message, $params)
{
	 ${1:/* Your code here */}
}
endsnippet

snippet h_flush_caches "h_flush_caches"
/**
 * Implements hook_flush_caches().
 */
function `!p snip.rv = snip.basename`_flush_caches()
{
	return array('${1}');
}
endsnippet

snippet h_modules_installed "h_modules_installed"
/**
 * Implements hook_modules_installed().
 */
function `!p snip.rv = snip.basename`_modules_installed($modules)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_modules_enabled "h_modules_enabled"
/**
 * Implements hook_modules_enabled().
 */
function `!p snip.rv = snip.basename`_modules_enabled($modules)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_modules_disabled "h_modules_disabled"
/**
 * Implements hook_modules_disabled().
 */
function `!p snip.rv = snip.basename`_modules_disabled($modules)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_modules_uninstalled "h_modules_uninstalled"
/**
 * Implements hook_modules_uninstalled().
 */
function `!p snip.rv = snip.basename`_modules_uninstalled($modules)
{
	foreach ($modules as $module) {
		db_delete('${1}')
			->condition('module', $module)
			->execute();
	}
	${2}_cache_rebuild();
}
endsnippet

snippet h_stream_wrappers "h_stream_wrappers"
/**
 * Implements hook_stream_wrappers().
 */
function `!p snip.rv = snip.basename`_stream_wrappers()
{
	return array(
		'${1}' => array(
			'name' => t('${2}'),
			'class' => '${3}',
			'description' => t('${4}'),
		),
	);
}
endsnippet

snippet h_stream_wrappers_alter "h_stream_wrappers_alter"
/**
 * Implements hook_stream_wrappers_alter().
 */
function `!p snip.rv = snip.basename`_stream_wrappers_alter(&$wrappers)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_file_load "h_file_load"
/**
 * Implements hook_file_load().
 */
function `!p snip.rv = snip.basename`_file_load($files)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_file_validate "h_file_validate"
/**
 * Implements hook_file_validate().
 */
function `!p snip.rv = snip.basename`_file_validate(&$file)
{
	$errors = array();
	if (${1}) {
		$errors[] = t("${2}");
	}
	return $errors;
}
endsnippet

snippet h_file_insert "h_file_insert"
/**
 * Implements hook_file_insert().
 */
function `!p snip.rv = snip.basename`_file_insert($file)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_file_update "h_file_update"
/**
 * Implements hook_file_update().
 */
function `!p snip.rv = snip.basename`_file_update($file)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_file_copy "h_file_copy"
/**
 * Implements hook_file_copy().
 */
function `!p snip.rv = snip.basename`_file_copy($file, $source)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_file_move "h_file_move"
/**
 * Implements hook_file_move().
 */
function `!p snip.rv = snip.basename`_file_move($file, $source)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_file_delete "h_file_delete"
/**
 * Implements hook_file_delete().
 */
function `!p snip.rv = snip.basename`_file_delete($file)
{
	 ${1:/* Your code here */}
}
endsnippet

snippet h_file_download "h_file_download"
/**
 * Implements hook_file_download().
 */
function `!p snip.rv = snip.basename`_file_download($uri)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_file_url_alter "h_file_url_alter"
/**
 * Implements hook_file_url_alter().
 */
function `!p snip.rv = snip.basename`_file_url_alter(&$uri)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_requirements "h_requirements"
/**
 * Implements hook_requirements().
 */
function `!p snip.rv = snip.basename`_requirements($phase)
{
	$requirements = array();
	${1:/* Your code here */}
	return $requirements;
}
endsnippet

snippet h_schema "h_schema"
/**
 * Implements hook_schema().
 */
function `!p snip.rv = snip.basename`_schema()
{
	$schema['${1}'] = array(
		'description' => '${2}',
		'fields' => array(
			'${3}' => array(
				'description' => '${4}',
				'type' => '${5}',
				'unsigned' => ${6},
				'not null' => ${7},
				'default' => ${8},
			),
		),
		'indexes' => array(
			'${9}' => array('${10}'),
		),
		'unique keys' => array(
			'${11}' => array('${12}')
		),
		'foreign keys' => array(
			'${13}' => array(
				'table' => '${14}',
				'columns' => array('${15}' => '${16}'),
			),
		),
		'primary key' => array('${17}'),
	);
	return $schema;
}
endsnippet

snippet h_schema_alter "h_schema_alter"
/**
 * Implements hook_schema_alter().
 */
function `!p snip.rv = snip.basename`_schema_alter(&$schema)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_query_alter "h_query_alter"
/**
 * Implements hook_query_alter().
 */
function `!p snip.rv = snip.basename`_query_alter(QueryAlterableInterface $query)
{
	if ($query->hasTag('${1}')) {
		${2:/* Your code here */}
	}
}
endsnippet

snippet h_install "h_install"
/**
 * Implements hook_install().
 */
function `!p snip.rv = snip.basename`_install()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_update_dependencies "h_update_dependencies"
/**
 * Implements hook_update_dependencies().
 */
function `!p snip.rv = snip.basename`_update_dependencies()
{
	$dependencies['${1}']['${2}'] = array(
		'${3}' => ${4},
	);
	return $dependencies;
}
endsnippet

snippet h_update_last_removed "h_update_last_removed"
/**
 * Implements hook_update_last_removed().
 */
function `!p snip.rv = snip.basename`_update_last_removed()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_uninstall "h_uninstall"
/**
 * Implements hook_uninstall().
 */
function `!p snip.rv = snip.basename`_uninstall()
{
	variable_del('${1}');
}
endsnippet

snippet h_enable "h_enable"
/**
 * Implements hook_enable().
 */
function `!p snip.rv = snip.basename`_enable()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_disable "h_disable"
/**
 * Implements hook_disable().
 */
function `!p snip.rv = snip.basename`_disable()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_registry_files_alter "h_registry_files_alter"
/**
 * Implements hook_registry_files_alter().
 */
function `!p snip.rv = snip.basename`_registry_files_alter(&$files, $modules)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_install_tasks "h_install_tasks"
/**
 * Implements hook_install_tasks().
 */
function `!p snip.rv = snip.basename`_install_tasks()
{
	$tasks = array(
		${1:/* Your code here */}
	);
	return $tasks;
}
endsnippet

snippet h_drupal_goto_alter "h_drupal_goto_alter"
/**
 * Implements hook_drupal_goto_alter().
 */
function `!p snip.rv = snip.basename`_drupal_goto_alter(&$path, &$options, &$http_response_code)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_html_head_alter "h_html_head_alter"
/**
 * Implements hook_html_head_alter().
 */
function `!p snip.rv = snip.basename`_html_head_alter(&$head_elements)
{
	foreach ($head_elements as $key => $element) {
		 ${1:/* Your code here */}
	}
}
endsnippet

snippet h_install_tasks_alter "h_install_tasks_alter"
/**
 * Implements hook_install_tasks_alter().
 */
function `!p snip.rv = snip.basename`_install_tasks_alter(&$tasks, $install_state)
{
	$tasks['${1}']['${2}'] = '${3}';
}
endsnippet

snippet h_file_mimetype_mapping_alter "h_file_mimetype_mapping_alter"
/**
 * Implements hook_file_mimetype_mapping_alter().
 */
function `!p snip.rv = snip.basename`_file_mimetype_mapping_alter(&$mapping)
{
	$mapping['${1}']['${2}'] = '${3}';
}
endsnippet

snippet h_action_info "h_action_info"
/**
 * Implements hook_action_info().
 */
function `!p snip.rv = snip.basename`_action_info()
{
	return array(
		'${1}' => array(
			'type' => '${2}',
			'label' => t('${3}'),
			'configurable' => ${4},
			'behavior' => array('${5}'),
			'triggers' => array('${6}', ${7}),
		),
	);
}
endsnippet

snippet h_actions_delete "h_actions_delete"
/**
 * Implements hook_actions_delete().
 */
function `!p snip.rv = snip.basename`_actions_delete($aid)
{
	db_delete('${1}')
		->condition('aid', $aid)
		->execute();
}
endsnippet

snippet h_action_info_alter "h_action_info_alter"
/**
 * Implements hook_action_info_alter().
 */
function `!p snip.rv = snip.basename`_action_info_alter(&$actions)
{
	$actions['${1}']['${2}'] = t('${3}');
}
endsnippet

snippet h_archiver_info "h_archiver_info"
/**
 * Implements hook_archiver_info().
 */
function `!p snip.rv = snip.basename`_archiver_info()
{
	return array(
		'${1}' => array(
			'class' => '${2}',
			'extensions' => array('${3}'${4}),
		),
	);
}
endsnippet

snippet h_archiver_info_alter "h_archiver_info_alter"
/**
 * Implements hook_archiver_info_alter().
 */
function `!p snip.rv = snip.basename`_archiver_info_alter(&$info)
{
	$info['${1}']['${2}'][] = '${3}';
}
endsnippet

snippet h_date_format_types "h_date_format_types"
/**
 * Implements hook_date_format_types().
 */
function `!p snip.rv = snip.basename`_date_format_types()
{
	return array(
		'${1}' => t('${2}'),
	);
}
endsnippet

snippet h_date_format_types_alter "h_date_format_types_alter"
/**
 * Implements hook_date_format_types_alter().
 */
function `!p snip.rv = snip.basename`_date_format_types_alter(&$types)
{
	foreach ($types as $type_name => $type) {
		$types[$type_name]['${1}'] = ${2};
	}
}
endsnippet

snippet h_date_formats "h_date_formats"
/**
 * Implements hook_date_formats().
 */
function `!p snip.rv = snip.basename`_date_formats()
{
	return array(
		array(
			'type' => '${1}',
			'format' => '${2}',
			'locales' => array('${3}'),
		),
	);
}
endsnippet

snippet h_date_formats_alter "h_date_formats_alter"
/**
 * Implements hook_date_formats_alter().
 */
function `!p snip.rv = snip.basename`_date_formats_alter(&$formats)
{
	foreach ($formats as $id => $format) {
		$formats[$id]['${1}'][] = '${2}';
	}
}
endsnippet

snippet h_page_delivery_callback_alter "h_page_delivery_callback_alter"
/**
 * Implements hook_page_delivery_callback_alter().
 */
function `!p snip.rv = snip.basename`_page_delivery_callback_alter(&$callback)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_system_themes_page_alter "h_system_themes_page_alter"
/**
 * Implements hook_system_themes_page_alter().
 */
function `!p snip.rv = snip.basename`_system_themes_page_alter(&$theme_groups)
{
	foreach ($theme_groups as $state => &$group) {
		foreach ($theme_groups[$state] as &$theme) {
			${1:/* Your code here */}
		}
	}
}
endsnippet

snippet h_url_inbound_alter "h_url_inbound_alter"
/**
 * Implements hook_url_inbound_alter().
 */
function `!p snip.rv = snip.basename`_url_inbound_alter(&$path, $original_path, $path_language)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_url_outbound_alter "h_url_outbound_alter"
/**
 * Implements hook_url_outbound_alter().
 */
function `!p snip.rv = snip.basename`_url_outbound_alter(&$path, &$options, $original_path)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_username_alter "h_username_alter"
/**
 * Implements hook_username_alter().
 */
function `!p snip.rv = snip.basename`_username_alter(&$name, $account)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_tokens($type, "$tokens, array $data = array(), array $options = array"
/**
 * Implements hook_tokens($type, $tokens, array $data = array(), array $options = array().
 */
function `!p snip.rv = snip.basename`_tokens($type, $tokens, array $data = array(), array $options = array())
{
	$replacements = array();
	${1:/* Your code here */}
	return $replacements;
}
endsnippet

snippet h_token_info "h_token_info"
/**
 * Implements hook_token_info().
 */
function `!p snip.rv = snip.basename`_token_info()
{
	$type = array(
		'name' => t('${1}'),
		'description' => t('${2}'),
		'needs-data' => '${3}',
	);
	$${4}['${5}'] = array(
		'name' => t("${6}"),
		'description' => t("${7}"),
	);
	return array(
		'types' => array('${8}' => $type),
		'tokens' => array('${9}' => $${10}),
	);
}
endsnippet

snippet h_batch_alter "h_batch_alter"
/**
 * Implements hook_batch_alter().
 */
function `!p snip.rv = snip.basename`_batch_alter(&$batch)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_token_info_alter "h_token_info_alter"
/**
 * Implements hook_token_info_alter().
 */
function `!p snip.rv = snip.basename`_token_info_alter(&$data)
{
	$data['tokens']['${1}']['${2}'] = array(
		'name' => t("${3}"),
		'description' => t("${4}"),
	);
}
endsnippet

snippet h_updater_info "h_updater_info"
/**
 * Implements hook_updater_info().
 */
function `!p snip.rv = snip.basename`_updater_info()
{
	return array(
		'${1}' => array(
			'class' => '${2}',
			'name' => t('${3}'),
			'weight' => ${4},
		),
	);
}
endsnippet

snippet h_updater_info_alter "h_updater_info_alter"
/**
 * Implements hook_updater_info_alter().
 */
function `!p snip.rv = snip.basename`_updater_info_alter(&$updaters)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_countries_alter "h_countries_alter"
/**
 * Implements hook_countries_alter().
 */
function `!p snip.rv = snip.basename`_countries_alter(&$countries)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_filetransfer_backends "h_filetransfer_backends"
/**
 * Implements hook_filetransfer_backends().
 */
function `!p snip.rv = snip.basename`_filetransfer_backends()
{
	$backends = array();
	${1:/* Your code here */}
	return $backends;
}
endsnippet

snippet h_menu_site_status_alter "h_menu_site_status_alter"
/**
 * Implements hook_menu_site_status_alter().
 */
function `!p snip.rv = snip.basename`_menu_site_status_alter(&$menu_site_status, $path)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_form_system_theme_settings_alter "h_form_system_theme_settings_alter"
/**
 * Implements hook_form_system_theme_settings_alter().
 */
function `!p snip.rv = snip.basename`_form_system_theme_settings_alter(&$form, &$form_state)
{
	$form['${1}']${2} = array(
		'#type' => '${3}',
		'#title' => t('${4}'),
		'#default_value' => theme_get_setting('${5}'),
		'#description'	 => t('${6}'),
	);
}
endsnippet

snippet h_preprocess "h_preprocess"
/**
 * Implements hook_preprocess().
 */
function `!p snip.rv = snip.basename`_preprocess(&$variables, $hook)
{
	static $hooks;
	${1:/* Your code here */}
}
endsnippet

snippet h_process "h_process"
/**
 * Implements hook_process().
 */
function `!p snip.rv = snip.basename`_process(&$variables, $hook)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_themes_enabled "h_themes_enabled"
/**
 * Implements hook_themes_enabled().
 */
function `!p snip.rv = snip.basename`_themes_enabled($theme_list)
{
	foreach ($theme_list as $theme) {
		${1:/* Your code here */}
	}
}
endsnippet

snippet h_themes_disabled "h_themes_disabled"
/**
 * Implements hook_themes_disabled().
 */
function `!p snip.rv = snip.basename`_themes_disabled($theme_list)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_file_download_access "h_file_download_access"
/**
 * Implements hook_file_download_access().
 */
function `!p snip.rv = snip.basename`_file_download_access($field, $entity_type, $entity)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_file_download_access_alter "h_file_download_access_alter"
/**
 * Implements hook_file_download_access_alter().
 */
function `!p snip.rv = snip.basename`_file_download_access_alter(&$grants, $field, $entity_type, $entity)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_help "h_help"
/**
 * Implements hook_help().
 */
function `!p snip.rv = snip.basename`_help($path, $arg)
{
	switch ($path) {
		case '${1}':
			return '<p>' . t('${2}', array('${3}' => ${4})) . '</p>';
	}
}
endsnippet

snippet h_comment_presave "h_comment_presave"
/**
 * Implements hook_comment_presave().
 */
function `!p snip.rv = snip.basename`_comment_presave($comment)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_comment_insert "h_comment_insert"
/**
 * Implements hook_comment_insert().
 */
function `!p snip.rv = snip.basename`_comment_insert($comment)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_comment_update "h_comment_update"
/**
 * Implements hook_comment_update().
 */
function `!p snip.rv = snip.basename`_comment_update($comment)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_comment_load "h_comment_load"
/**
 * Implements hook_comment_load().
 */
function `!p snip.rv = snip.basename`_comment_load($comments)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_comment_view "h_comment_view"
/**
 * Implements hook_comment_view().
 */
function `!p snip.rv = snip.basename`_comment_view($comment, $view_mode, $langcode)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_comment_view_alter "h_comment_view_alter"
/**
 * Implements hook_comment_view_alter().
 */
function `!p snip.rv = snip.basename`_comment_view_alter(&$build)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_comment_publish "h_comment_publish"
/**
 * Implements hook_comment_publish().
 */
function `!p snip.rv = snip.basename`_comment_publish($comment)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_comment_unpublish "h_comment_unpublish"
/**
 * Implements hook_comment_unpublish().
 */
function `!p snip.rv = snip.basename`_comment_unpublish($comment)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_comment_delete "h_comment_delete"
/**
 * Implements hook_comment_delete().
 */
function `!p snip.rv = snip.basename`_comment_delete($comment)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_update_projects_alter "h_update_projects_alter"
/**
 * Implements hook_update_projects_alter().
 */
function `!p snip.rv = snip.basename`_update_projects_alter(&$projects)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_update_status_alter "h_update_status_alter"
/**
 * Implements hook_update_status_alter().
 */
function `!p snip.rv = snip.basename`_update_status_alter(&$projects)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_verify_update_archive "h_verify_update_archive"
/**
 * Implements hook_verify_update_archive().
 */
function `!p snip.rv = snip.basename`_verify_update_archive($project, $archive_file, $directory)
{
	if (!file_exists($directory)) {
		return TRUE;
	}
	${1:/* Add other checks on the archive integrity here */}
}
endsnippet

snippet h_node_grants "h_node_grants"
/**
 * Implements hook_node_grants().
 */
function `!p snip.rv = snip.basename`_node_grants($account, $op)
{
	${1:/* Your code here */}
	return $grants;
}
endsnippet

snippet h_node_access_records "h_node_access_records"
/**
 * Implements hook_node_access_records().
 */
function `!p snip.rv = snip.basename`_node_access_records($node)
{
		$grants[] = array(
			'realm' => '${1}',
			'gid' => ${2},
			'grant_view' => ${3},
			'grant_update' => ${4},
			'grant_delete' => ${5},
			'priority' => ${6},
		);
		return $grants;
	}
}
endsnippet

snippet h_node_access_records_alter "h_node_access_records_alter"
/**
 * Implements hook_node_access_records_alter().
 */
function `!p snip.rv = snip.basename`_node_access_records_alter(&$grants, $node)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_node_grants_alter "h_node_grants_alter"
/**
 * Implements hook_node_grants_alter().
 */
function `!p snip.rv = snip.basename`_node_grants_alter(&$grants, $account, $op)
{
	 ${1:/* Your code here */}
}
endsnippet

snippet h_node_operations "h_node_operations"
/**
 * Implements hook_node_operations().
 */
function `!p snip.rv = snip.basename`_node_operations()
{
	$operations = array(
		'${1}' => array(
			'label' => t('${2}'),
			'callback' => '${3}',
			'callback arguments' => array('${4}' => array('${5}' => ${6})),
		),
	);
	return $operations;
}
endsnippet

snippet h_node_delete "h_node_delete"
/**
 * Implements hook_node_delete().
 */
function `!p snip.rv = snip.basename`_node_delete($node)
{
	db_delete('${1}')
		->condition('nid', $node->nid)
		->execute();
}
endsnippet

snippet h_node_revision_delete "h_node_revision_delete"
/**
 * Implements hook_node_revision_delete().
 */
function `!p snip.rv = snip.basename`_node_revision_delete($node)
{
	db_delete('${1}')
		->condition('vid', $node->vid)
		->execute();
}
endsnippet

snippet h_node_insert "h_node_insert"
/**
 * Implements hook_node_insert().
 */
function `!p snip.rv = snip.basename`_node_insert($node)
{
	db_insert('${1}')
		->fields(array(
			'nid' => $node->nid,
			'extra' => $node->extra,
		))
		->execute();
}
endsnippet

snippet h_node_load "h_node_load"
/**
 * Implements hook_node_load().
 */
function `!p snip.rv = snip.basename`_node_load($nodes, $types)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_node_access "h_node_access"
/**
 * Implements hook_node_access().
 */
function `!p snip.rv = snip.basename`_node_access($node, $op, $account)
{
	$type = is_string($node) ? $node : $node->type;
	${1:/* Your code here */}
	return NODE_ACCESS_IGNORE;
}
endsnippet

snippet h_node_prepare "h_node_prepare"
/**
 * Implements hook_node_prepare().
 */
function `!p snip.rv = snip.basename`_node_prepare($node)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_node_search_result "h_node_search_result"
/**
 * Implements hook_node_search_result().
 */
function `!p snip.rv = snip.basename`_node_search_result($node)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_node_presave "h_node_presave"
/**
 * Implements hook_node_presave().
 */
function `!p snip.rv = snip.basename`_node_presave($node)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_node_update "h_node_update"
/**
 * Implements hook_node_update().
 */
function `!p snip.rv = snip.basename`_node_update($node)
{
	db_update('${1}')
		->fields(array('${2}' => ${3})
		->condition('nid', $node->nid)
		->execute();
}
endsnippet

snippet h_node_update_index "h_node_update_index"
/**
 * Implements hook_node_update_index().
 */
function `!p snip.rv = snip.basename`_node_update_index($node)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_node_validate "h_node_validate"
/**
 * Implements hook_node_validate().
 */
function `!p snip.rv = snip.basename`_node_validate($node, $form, &$form_state)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_node_submit "h_node_submit"
/**
 * Implements hook_node_submit().
 */
function `!p snip.rv = snip.basename`_node_submit($node, $form, &$form_state)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_node_view "h_node_view"
/**
 * Implements hook_node_view().
 */
function `!p snip.rv = snip.basename`_node_view($node, $view_mode, $langcode)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_node_view_alter "h_node_view_alter"
/**
 * Implements hook_node_view_alter().
 */
function `!p snip.rv = snip.basename`_node_view_alter(&$build)
{
}
endsnippet

snippet h_node_info "h_node_info"
/**
 * Implements hook_node_info().
 */
function `!p snip.rv = snip.basename`_node_info()
{
	return array(
		'${1}' => array(
			'name' => t('${2}'),
			'base' => '${3}',
			'description' => t('${4}'),
		)
	);
}
endsnippet

snippet h_ranking "h_ranking"
/**
 * Implements hook_ranking().
 */
function `!p snip.rv = snip.basename`_ranking()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_node_type_insert "h_node_type_insert"
/**
 * Implements hook_node_type_insert().
 */
function `!p snip.rv = snip.basename`_node_type_insert($info)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_node_type_update "h_node_type_update"
/**
 * Implements hook_node_type_update().
 */
function `!p snip.rv = snip.basename`_node_type_update($info)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_node_type_delete "h_node_type_delete"
/**
 * Implements hook_node_type_delete().
 */
function `!p snip.rv = snip.basename`_node_type_delete($info)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_delete "h_delete"
/**
 * Implements hook_delete().
 */
function `!p snip.rv = snip.basename`_delete($node)
{
	db_delete('${1}')
		->condition('nid', $nid->nid)
		->execute();
}
endsnippet

snippet h_prepare "h_prepare"
/**
 * Implements hook_prepare().
 */
function `!p snip.rv = snip.basename`_prepare($node)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_form "h_form"
/**
 * Implements hook_form().
 */
function `!p snip.rv = snip.basename`_form($node, &$form_state)
{
	$type = node_type_get_type($node);
	$form['${1}']${2} = array(
		'#type' => '${3}',
		'#title' => t('${4}'),
		'#default_value' => ${5},${6}
	);
	return $form;
}
endsnippet

snippet h_insert "h_insert"
/**
 * Implements hook_insert().
 */
function `!p snip.rv = snip.basename`_insert($node)
{
	db_insert('${1}')
		->fields(array(
			'nid' => $node->nid,
			'extra' => $node->extra,
		))
		->execute();
}
endsnippet

snippet h_load "h_load"
/**
 * Implements hook_load().
 */
function `!p snip.rv = snip.basename`_load($nodes)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_update "h_update"
/**
 * Implements hook_update().
 */
function `!p snip.rv = snip.basename`_update($node)
{
	db_update('${1}')
		->fields(array('extra' => $node->extra))
		->condition('nid', $node->nid)
		->execute();
}
endsnippet

snippet h_validate "h_validate"
/**
 * Implements hook_validate().
 */
function `!p snip.rv = snip.basename`_validate($node, $form, &$form_state)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_view "h_view"
/**
 * Implements hook_view().
 */
function `!p snip.rv = snip.basename`_view($node, $view_mode)
{
	${1:/* Your code here */}
	return $node;
}
endsnippet

snippet h_block_info "h_block_info"
/**
 * Implements hook_block_info().
 */
function `!p snip.rv = snip.basename`_block_info()
{
	$blocks['${1}'] = array(
		'info' => t('${2}'),
		'cache' => ${3}DRUPAL_NO_CACHE
	);
	return $blocks;
}
endsnippet

snippet h_block_info_alter "h_block_info_alter"
/**
 * Implements hook_block_info_alter().
 */
function `!p snip.rv = snip.basename`_block_info_alter(&$blocks, $theme, $code_blocks)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_block_configure "h_block_configure"
/**
 * Implements hook_block_configure().
 */
function `!p snip.rv = snip.basename`_block_configure($delta = '')
{
	$form = array();
	if ($delta == '${1}') {
		$form['${2}']${3} = array(
			'#type' => '${4}',
			'#title' => t('${5}'),
			'#default_value' => variable_get('${6}', ${7}),${8}
		);
	}
	return $form;
}
endsnippet

snippet h_block_save "h_block_save"
/**
 * Implements hook_block_save($delta = '', $edit = array().
 */
function `!p snip.rv = snip.basename`_block_save($delta = '', $edit = array())
{
	${1:/* Your code here */}
}
endsnippet

snippet h_block_view "h_block_view"
/**
 * Implements hook_block_view().
 */
function `!p snip.rv = snip.basename`_block_view($delta = '')
{
	$block = array();
	switch ($delta) {
		case '${1}':
			$block['subject'] = t('${2}');
			$block['content'] = theme('${3}', array('${4}' =>${5}));
			break;
		${6}
	}
	return $block;
}
endsnippet

snippet h_block_view_alter "h_block_view_alter"
/**
 * Implements hook_block_view_alter().
 */
function `!p snip.rv = snip.basename`_block_view_alter(&$data, $block)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_block_list_alter "h_block_list_alter"
/**
 * Implements hook_block_list_alter().
 */
function `!p snip.rv = snip.basename`_block_list_alter(&$blocks)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_user_load "h_user_load"
/**
 * Implements hook_user_load().
 */
function `!p snip.rv = snip.basename`_user_load($users)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_user_delete "h_user_delete"
/**
 * Implements hook_user_delete().
 */
function `!p snip.rv = snip.basename`_user_delete($account)
{
	db_delete('${1}')
		->condition('uid', $account->uid)
		->execute();
}
endsnippet

snippet h_user_cancel "h_user_cancel"
/**
 * Implements hook_user_cancel().
 */
function `!p snip.rv = snip.basename`_user_cancel($edit, $account, $method)
{
	switch ($method) {
		case '${1}':
			${2:/* Your code here */}
			break;
	}
}
endsnippet

snippet h_user_cancel_methods_alter "h_user_cancel_methods_alter"
/**
 * Implements hook_user_cancel_methods_alter().
 */
function `!p snip.rv = snip.basename`_user_cancel_methods_alter(&$methods)
{
	 $methods['${1}']${2}
}
endsnippet

snippet h_user_operations "h_user_operations"
/**
 * Implements hook_user_operations().
 */
function `!p snip.rv = snip.basename`_user_operations()
{
	$operations = array(
		'${1}' => array(
			'label' => t('${2}'),
			'callback' => '${3}',
		),
	);
	return $operations;
}
endsnippet

snippet h_user_categories "h_user_categories"
/**
 * Implements hook_user_categories().
 */
function `!p snip.rv = snip.basename`_user_categories()
{
	return array(array(
		'name' => '${1}',
		'title' => t('${2}'),
		'weight' => ${3},
	));
}
endsnippet

snippet h_user_presave "h_user_presave"
/**
 * Implements hook_user_presave().
 */
function `!p snip.rv = snip.basename`_user_presave(&$edit, $account, $category)
{
	${1:/* your code here */}
}
endsnippet

snippet h_user_insert "h_user_insert"
/**
 * Implements hook_user_insert().
 */
function `!p snip.rv = snip.basename`_user_insert(&$edit, $account, $category)
{
	db_insert('${1}')
		->fields(array(
			'${2}' => $edit['${3}'],
			'uid' => $account->uid,
		))
		->execute();
}
endsnippet

snippet h_user_update "h_user_update"
/**
 * Implements hook_user_update().
 */
function `!p snip.rv = snip.basename`_user_update(&$edit, $account, $category)
{
	db_insert('${1}')
		->fields(array(
			'uid' => $account->uid,
			'changed' => time(),
		))
		->execute();
}
endsnippet

snippet h_user_login "h_user_login"
/**
 * Implements hook_user_login().
 */
function `!p snip.rv = snip.basename`_user_login(&$edit, $account)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_user_logout "h_user_logout"
/**
 * Implements hook_user_logout().
 */
function `!p snip.rv = snip.basename`_user_logout($account)
{
	db_insert('${1}')
		->fields(array(
			'uid' => $account->uid,
			'time' => time(),
		))
		->execute();
}
endsnippet

snippet h_user_view "h_user_view"
/**
 * Implements hook_user_view().
 */
function `!p snip.rv = snip.basename`_user_view($account, $view_mode, $langcode)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_user_view_alter "h_user_view_alter"
/**
 * Implements hook_user_view_alter().
 */
function `!p snip.rv = snip.basename`_user_view_alter(&$build)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_user_role_insert "h_user_role_insert"
/**
 * Implements hook_user_role_insert().
 */
function `!p snip.rv = snip.basename`_user_role_insert($role)
{
	db_insert('${1}')
		->fields(array(
			'rid' => $role->rid,
			'role_description' => $role->description,
		))
		->execute();
}
endsnippet

snippet h_user_role_update "h_user_role_update"
/**
 * Implements hook_user_role_update().
 */
function `!p snip.rv = snip.basename`_user_role_update($role)
{
	db_merge('${1}')
		->key(array('rid' => $role->rid))
		->fields(array(
			'role_description' => $role->description
		))
		->execute();
}
endsnippet

snippet h_user_role_delete "h_user_role_delete"
/**
 * Implements hook_user_role_delete().
 */
function `!p snip.rv = snip.basename`_user_role_delete($role)
{
	db_delete('${1}')
		->condition('rid', $role->rid)
		->execute();
}
endsnippet

snippet h_taxonomy_vocabulary_load "h_taxonomy_vocabulary_load"
/**
 * Implements hook_taxonomy_vocabulary_load().
 */
function `!p snip.rv = snip.basename`_taxonomy_vocabulary_load($vocabularies)
{
	foreach ($vocabularies as $vocabulary) {
		${1:/* Your code here */}
	}
}
endsnippet

snippet h_taxonomy_vocabulary_presave "h_taxonomy_vocabulary_presave"
/**
 * Implements hook_taxonomy_vocabulary_presave().
 */
function `!p snip.rv = snip.basename`_taxonomy_vocabulary_presave($vocabulary)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_taxonomy_vocabulary_insert "h_taxonomy_vocabulary_insert"
/**
 * Implements hook_taxonomy_vocabulary_insert().
 */
function `!p snip.rv = snip.basename`_taxonomy_vocabulary_insert($vocabulary)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_taxonomy_vocabulary_update "h_taxonomy_vocabulary_update"
/**
 * Implements hook_taxonomy_vocabulary_update().
 */
function `!p snip.rv = snip.basename`_taxonomy_vocabulary_update($vocabulary)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_taxonomy_vocabulary_delete "h_taxonomy_vocabulary_delete"
/**
 * Implements hook_taxonomy_vocabulary_delete().
 */
function `!p snip.rv = snip.basename`_taxonomy_vocabulary_delete($vocabulary)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_taxonomy_term_load "h_taxonomy_term_load"
/**
 * Implements hook_taxonomy_term_load().
 */
function `!p snip.rv = snip.basename`_taxonomy_term_load($terms)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_taxonomy_term_presave "h_taxonomy_term_presave"
/**
 * Implements hook_taxonomy_term_presave().
 */
function `!p snip.rv = snip.basename`_taxonomy_term_presave($term)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_taxonomy_term_insert "h_taxonomy_term_insert"
/**
 * Implements hook_taxonomy_term_insert().
 */
function `!p snip.rv = snip.basename`_taxonomy_term_insert($term)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_taxonomy_term_update "h_taxonomy_term_update"
/**
 * Implements hook_taxonomy_term_update().
 */
function `!p snip.rv = snip.basename`_taxonomy_term_update($term)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_taxonomy_term_delete "h_taxonomy_term_delete"
/**
 * Implements hook_taxonomy_term_delete().
 */
function `!p snip.rv = snip.basename`_taxonomy_term_delete($term)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_openid "h_openid"
/**
 * Implements hook_openid().
 */
function `!p snip.rv = snip.basename`_openid($op, $request)
{
	${1:/* Your code here */}
	return $request;
}
endsnippet

snippet h_openid_response "h_openid_response"
/**
 * Implements hook_openid_response().
 */
function `!p snip.rv = snip.basename`_openid_response($response, $account)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_openid_discovery_method_info "h_openid_discovery_method_info"
/**
 * Implements hook_openid_discovery_method_info().
 */
function `!p snip.rv = snip.basename`_openid_discovery_method_info()
{
	return array(
		'${1}' => '${2}',
	);
}
endsnippet

snippet h_openid_discovery_method_info_alter "h_openid_discovery_method_info_alter"
/**
 * Implements hook_openid_discovery_method_info_alter().
 */
function `!p snip.rv = snip.basename`_openid_discovery_method_info_alter(&$methods)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_openid_normalization_method_info "h_openid_normalization_method_info"
/**
 * Implements hook_openid_normalization_method_info().
 */
function `!p snip.rv = snip.basename`_openid_normalization_method_info()
{
	return array(
		'${1}' => '${2}',
	);
}
endsnippet

snippet h_openid_normalization_method_info_alter "h_openid_normalization_method_info_alter"
/**
 * Implements hook_openid_normalization_method_info_alter().
 */
function `!p snip.rv = snip.basename`_openid_normalization_method_info_alter(&$methods)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_filter_info "h_filter_info"
/**
 * Implements hook_filter_info().
 */
function `!p snip.rv = snip.basename`_filter_info()
{
	$filters['${1}'] = array(
		'title' => t('${2}'),
		'description' => t('${3}'),
		'process callback' => '${4}',
		'settings callback' => '${5}',
		'default settings' => array(
			'allowed_html' => '${6}',
			'filter_html_help' => ${7},
			'filter_html_nofollow' => ${8},
		),
		'tips callback' => '${9}',
	);
	return $filters;
}
endsnippet

snippet h_filter_info_alter "h_filter_info_alter"
/**
 * Implements hook_filter_info_alter().
 */
function `!p snip.rv = snip.basename`_filter_info_alter(&$info)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_filter_format_insert "h_filter_format_insert"
/**
 * Implements hook_filter_format_insert().
 */
function `!p snip.rv = snip.basename`_filter_format_insert($format)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_filter_format_update "h_filter_format_update"
/**
 * Implements hook_filter_format_update().
 */
function `!p snip.rv = snip.basename`_filter_format_update($format)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_filter_format_disable "h_filter_format_disable"
/**
 * Implements hook_filter_format_disable().
 */
function `!p snip.rv = snip.basename`_filter_format_disable($format)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_rdf_mapping "h_rdf_mapping"
/**
 * Implements hook_rdf_mapping().
 */
function `!p snip.rv = snip.basename`_rdf_mapping()
{
	return array(
		array(
			'type' => '${1}',
			'bundle' => '${2}',
			'mapping' => array(
				'rdftype' => array('${3}'),
				'title' => array(
					'predicates' => array('${4}'),
				),
				'created' => array(
					'predicates' => array('${5}'),
					'datatype' => '${6}',
					'callback' => '${7}',
				),
				'body' => array(
					'predicates' => array('${8}'),
				),
				'uid' => array(
					'predicates' => array('${9}'),
					'type' => '${10}',
				),
				'name' => array(
					'predicates' => array('${11}'),
				),
			),
		),
	);
}
endsnippet

snippet h_rdf_namespaces "h_rdf_namespaces"
/**
 * Implements hook_rdf_namespaces().
 */
function `!p snip.rv = snip.basename`_rdf_namespaces()
{
	return array(
		'${1}'	=> '${2}',
	);
}
endsnippet

snippet h_field_settings_form "h_field_settings_form"
/**
 * Implements hook_field_settings_form().
 */
function `!p snip.rv = snip.basename`_field_settings_form($field, $instance, $has_data)
{
	$settings = $field['settings'];
	$form['${1}']${2} = array(
		'#type' => '${3}',
		'#title' => t('${4}'),
		'#default_value' => $settings['${5}'],
		'#required' => ${6},
		'#element_validate' => array('${7}'),
		'#description' => t('${8}'),${9}
	);
	return $form;
}
endsnippet

snippet h_field_instance_settings_form "h_field_instance_settings_form"
/**
 * Implements hook_field_instance_settings_form().
 */
function `!p snip.rv = snip.basename`_field_instance_settings_form($field, $instance)
{
	$settings = $instance['settings'];
	$form['${1}']${2} = array(
		'#type' => '${3}',
		'#title' => t('${4}'),
		'#default_value' => $settings['${5}'],
		'#required' => ${6},
		'#element_validate' => array('${7}'),
		'#description' => t('${8}'),${9}
	);
	return $form;
}
endsnippet

snippet h_field_widget_settings_form "h_field_widget_settings_form"
/**
 * Implements hook_field_widget_settings_form().
 */
function `!p snip.rv = snip.basename`_field_widget_settings_form($field, $instance)
{
	$widget = $instance['widget'];
	$settings = $widget['settings'];
	$form['${1}']${2} = array(
		'#type' => '${3}',
		'#title' => t('${4}'),
		'#default_value' => $settings['${5}'],
		'#required' => ${6},
		'#element_validate' => array('${7}'),
		'#description' => t('${8}'),${9}
	);
	return $form;
}
endsnippet

snippet h_field_formatter_settings_form "h_field_formatter_settings_form"
/**
 * Implements hook_field_formatter_settings_form().
 */
function `!p snip.rv = snip.basename`_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state)
{
	$display = $instance['display'][$view_mode];
	$settings = $display['settings'];
	$element['${1}'] = array(
		'#type' => '${2}',
		'#title' => t('${3}'),
		'#default_value' => $settings['${4}'],
		'#required' => ${5},
		'#element_validate' => array('${6}'),
		'#description' => t('${7}'),
		'#${8}' => ${9}
	);
	return $element;
}
endsnippet

snippet h_field_formatter_settings_summary "h_field_formatter_settings_summary"
/**
 * Implements hook_field_formatter_settings_summary().
 */
function `!p snip.rv = snip.basename`_field_formatter_settings_summary($field, $instance, $view_mode)
{
	${1:/* Your code here */}
	return $summary;
}
endsnippet

snippet h_field_extra_fields "h_field_extra_fields"
/**
 * Implements hook_field_extra_fields().
 */
function `!p snip.rv = snip.basename`_field_extra_fields()
{
	$extra['${1}']['${2}'] = array(
		'form' => array(
			'${3}' => array(
				'label' => t('${4}'),
				'description' => t('${5}'),
				'weight' => ${6},
			),
		),
		'display' => array(
			'${7}' => array(
				'label' => t('${8}'),
				'description' => t('${9}'),
				'weight' => ${10},
			),
		)
	);
	return $extra;
}
endsnippet

snippet h_field_extra_fields_alter "h_field_extra_fields_alter"
/**
 * Implements hook_field_extra_fields_alter().
 */
function `!p snip.rv = snip.basename`_field_extra_fields_alter(&$info)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_info "h_field_info"
/**
 * Implements hook_field_info().
 */
function `!p snip.rv = snip.basename`_field_info()
{
	return array(
		'${1}' => array(
			'label' => t('${2}'),
			'description' => t('${3}'),
			'settings' => array('${4}' => ${5}),
			'instance_settings' => array('${6}' => ${7}),
			'default_widget' => '${8}',
			'default_formatter' => '${9}',
		),
	);
}
endsnippet

snippet h_field_info_alter "h_field_info_alter"
/**
 * Implements hook_field_info_alter().
 */
function `!p snip.rv = snip.basename`_field_info_alter(&$info)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_schema "h_field_schema"
/**
 * Implements hook_field_schema().
 */
function `!p snip.rv = snip.basename`_field_schema($field)
{
	$columns = array(
		'${1}' => array(
			'type' => '${2}',
			'length' => ${3},
			'unsigned' => ${4},
			'not null' => ${5},
		),
	);
	$columns = array(
		'${6}' => array(
			'type' => '${7}',
			'length' => ${8},
			'unsigned' => ${9},
			'not null' => ${10},
		),
	);
	return array(
		'columns' => $columns,
		'indexes' => array(
			'${11}' => array('${12}'),
		),
	);
}
endsnippet

snippet h_field_load "h_field_load"
/**
 * Implements hook_field_load().
 */
function `!p snip.rv = snip.basename`_field_load($entity_type, $entities, $field, $instances, $langcode, &$items, $age)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_prepare_view "h_field_prepare_view"
/**
 * Implements hook_field_prepare_view().
 */
function `!p snip.rv = snip.basename`_field_prepare_view($entity_type, $entities, $field, $instances, $langcode, &$items)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_validate "h_field_validate"
/**
 * Implements hook_field_validate().
 */
function `!p snip.rv = snip.basename`_field_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors)
{
	foreach ($items as $delta => $item) {
		if (!empty($item['value'])) {
			${1:/* Your code here */}
		}
	}
}
endsnippet

snippet h_field_presave "h_field_presave"
/**
 * Implements hook_field_presave().
 */
function `!p snip.rv = snip.basename`_field_presave($entity_type, $entity, $field, $instance, $langcode, &$items)
{
	if ($field['type'] == '${1}') {
		foreach ($items as $delta => $item) {
			${1:/* Your code here */}
		}
	}
}
endsnippet

snippet h_field_insert "h_field_insert"
/**
 * Implements hook_field_insert().
 */
function `!p snip.rv = snip.basename`_field_insert($entity_type, $entity, $field, $instance, $langcode, &$items)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_update "h_field_update"
/**
 * Implements hook_field_update().
 */
function `!p snip.rv = snip.basename`_field_update($entity_type, $entity, $field, $instance, $langcode, &$items)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_storage_update_field "h_field_storage_update_field"
/**
 * Implements hook_field_storage_update_field().
 */
function `!p snip.rv = snip.basename`_field_storage_update_field($field, $prior_field, $has_data)
{
	if (!$has_data) {
		${1:/* Your code here */}
	}
	else {
		${2:/* Your code here */}
	}
	drupal_get_schema(NULL, TRUE);
}
endsnippet

snippet h_field_delete "h_field_delete"
/**
 * Implements hook_field_delete().
 */
function `!p snip.rv = snip.basename`_field_delete($entity_type, $entity, $field, $instance, $langcode, &$items)
{
	list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);
	foreach ($items as $delta => $item) {
		${1:/* Your code here */}
	}
}
endsnippet

snippet h_field_delete_revision "h_field_delete_revision"
/**
 * Implements hook_field_delete_revision().
 */
function `!p snip.rv = snip.basename`_field_delete_revision($entity_type, $entity, $field, $instance, $langcode, &$items)
{
	foreach ($items as $delta => $item) {
		${1:/* Your code here */}
	}
}
endsnippet

snippet h_field_prepare_translation "h_field_prepare_translation"
/**
 * Implements hook_field_prepare_translation().
 */
function `!p snip.rv = snip.basename`_field_prepare_translation($entity_type, $entity, $field, $instance, $langcode, &$items, $source_entity, $source_langcode)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_is_empty "h_field_is_empty"
/**
 * Implements hook_field_is_empty().
 */
function `!p snip.rv = snip.basename`_field_is_empty($item, $field)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_widget_info "h_field_widget_info"
/**
 * Implements hook_field_widget_info().
 */
function `!p snip.rv = snip.basename`_field_widget_info()
{
		return array(
		'${1}' => array(
			'label' => t('${2}'),
			'field types' => array('${3}'),
			'settings' => array('${4}' => ${5}),
			'behaviors' => array(
				'multiple values' => ${6}FIELD_BEHAVIOR_DEFAULT,
				'default value' => ${7}FIELD_BEHAVIOR_DEFAULT,
			),
		),
	);
}
endsnippet

snippet h_field_widget_info_alter "h_field_widget_info_alter"
/**
 * Implements hook_field_widget_info_alter().
 */
function `!p snip.rv = snip.basename`_field_widget_info_alter(&$info)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_widget_form "h_field_widget_form"
/**
 * Implements hook_field_widget_form().
 */
function `!p snip.rv = snip.basename`_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element)
{
	$element += array(
		'#type' => ${1},
		'#default_value' => ${2},
	);
	return $element;
}
endsnippet

snippet h_field_widget_error "h_field_widget_error"
/**
 * Implements hook_field_widget_error().
 */
function `!p snip.rv = snip.basename`_field_widget_error($element, $error, $form, &$form_state)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_formatter_info "h_field_formatter_info"
/**
 * Implements hook_field_formatter_info().
 */
function `!p snip.rv = snip.basename`_field_formatter_info()
{
	return array(
		'${1}' => array(
			'label' => t('${2}'),
			'field types' => array('${3}'),
		),
	);
}
endsnippet

snippet h_field_formatter_info_alter "h_field_formatter_info_alter"
/**
 * Implements hook_field_formatter_info_alter().
 */
function `!p snip.rv = snip.basename`_field_formatter_info_alter(&$info)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_formatter_prepare_view "h_field_formatter_prepare_view"
/**
 * Implements hook_field_formatter_prepare_view().
 */
function `!p snip.rv = snip.basename`_field_formatter_prepare_view($entity_type, $entities, $field, $instances, $langcode, &$items, $displays)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_formatter_view "h_field_formatter_view"
/**
 * Implements hook_field_formatter_view().
 */
function `!p snip.rv = snip.basename`_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display)
{
	$element = array();
	$settings = $display['settings'];
	switch ($display['type']) {
		case '${1}':
			foreach ($items as $delta => $item) {
				$element[$delta] = array(
					'#theme' => '${2}',
					'#data' => $item['value'],
					'#markup' => ${3},
					'#${4}' => $settings['${5}'],
				);
			}
			break;
	}
	return $element;
}
endsnippet

snippet h_field_attach_form "h_field_attach_form"
/**
 * Implements hook_field_attach_form().
 */
function `!p snip.rv = snip.basename`_field_attach_form($entity_type, $entity, &$form, &$form_state, $langcode)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_attach_load "h_field_attach_load"
/**
 * Implements hook_field_attach_load().
 */
function `!p snip.rv = snip.basename`_field_attach_load($entity_type, &$entities, $age, $options)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_attach_validate "h_field_attach_validate"
/**
 * Implements hook_field_attach_validate().
 */
function `!p snip.rv = snip.basename`_field_attach_validate($entity_type, $entity, &$errors)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_attach_submit "h_field_attach_submit"
/**
 * Implements hook_field_attach_submit().
 */
function `!p snip.rv = snip.basename`_field_attach_submit($entity_type, $entity, $form, &$form_state)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_attach_presave "h_field_attach_presave"
/**
 * Implements hook_field_attach_presave().
 */
function `!p snip.rv = snip.basename`_field_attach_presave($entity_type, $entity)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_attach_insert "h_field_attach_insert"
/**
 * Implements hook_field_attach_insert().
 */
function `!p snip.rv = snip.basename`_field_attach_insert($entity_type, $entity)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_attach_update "h_field_attach_update"
/**
 * Implements hook_field_attach_update().
 */
function `!p snip.rv = snip.basename`_field_attach_update($entity_type, $entity)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_attach_preprocess_alter "h_field_attach_preprocess_alter"
/**
 * Implements hook_field_attach_preprocess_alter().
 */
function `!p snip.rv = snip.basename`_field_attach_preprocess_alter(&$variables, $context)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_attach_delete "h_field_attach_delete"
/**
 * Implements hook_field_attach_delete().
 */
function `!p snip.rv = snip.basename`_field_attach_delete($entity_type, $entity)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_attach_delete_revision "h_field_attach_delete_revision"
/**
 * Implements hook_field_attach_delete_revision().
 */
function `!p snip.rv = snip.basename`_field_attach_delete_revision($entity_type, $entity)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_attach_purge "h_field_attach_purge"
/**
 * Implements hook_field_attach_purge().
 */
function `!p snip.rv = snip.basename`_field_attach_purge($entity_type, $entity, $field, $instance)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_attach_view_alter "h_field_attach_view_alter"
/**
 * Implements hook_field_attach_view_alter().
 */
function `!p snip.rv = snip.basename`_field_attach_view_alter(&$output, $context)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_attach_prepare_translation_alter "h_field_attach_prepare_translation_alter"
/**
 * Implements hook_field_attach_prepare_translation_alter().
 */
function `!p snip.rv = snip.basename`_field_attach_prepare_translation_alter(&$entity, $context)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_language_alter "h_field_language_alter"
/**
 * Implements hook_field_language_alter().
 */
function `!p snip.rv = snip.basename`_field_language_alter(&$display_language, $context)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_available_languages_alter "h_field_available_languages_alter"
/**
 * Implements hook_field_available_languages_alter().
 */
function `!p snip.rv = snip.basename`_field_available_languages_alter(&$languages, $context)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_attach_create_bundle "h_field_attach_create_bundle"
/**
 * Implements hook_field_attach_create_bundle().
 */
function `!p snip.rv = snip.basename`_field_attach_create_bundle($entity_type, $bundle)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_attach_rename_bundle "h_field_attach_rename_bundle"
/**
 * Implements hook_field_attach_rename_bundle().
 */
function `!p snip.rv = snip.basename`_field_attach_rename_bundle($entity_type, $bundle_old, $bundle_new)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_attach_delete_bundle "h_field_attach_delete_bundle"
/**
 * Implements hook_field_attach_delete_bundle().
 */
function `!p snip.rv = snip.basename`_field_attach_delete_bundle($entity_type, $bundle, $instances)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_storage_info "h_field_storage_info"
/**
 * Implements hook_field_storage_info().
 */
function `!p snip.rv = snip.basename`_field_storage_info()
{
	return array(
		'${1}' => array(
			'label' => t('${2}'),
			'description' => t('${3}'),
			'settings' => array('${4}'${5}),
		),
	);
}
endsnippet

snippet h_field_storage_info_alter "h_field_storage_info_alter"
/**
 * Implements hook_field_storage_info_alter().
 */
function `!p snip.rv = snip.basename`_field_storage_info_alter(&$info)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_storage_details "h_field_storage_details"
/**
 * Implements hook_field_storage_details().
 */
function `!p snip.rv = snip.basename`_field_storage_details($field)
{
	$details = array();
	${1:/* Your code here */}
}
endsnippet

snippet h_field_storage_details_alter "h_field_storage_details_alter"
/**
 * Implements hook_field_storage_details_alter().
 */
function `!p snip.rv = snip.basename`_field_storage_details_alter(&$details, $field)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_storage_load "h_field_storage_load"
/**
 * Implements hook_field_storage_load().
 */
function `!p snip.rv = snip.basename`_field_storage_load($entity_type, &$entities, $age, $fields, $options)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_storage_write "h_field_storage_write"
/**
 * Implements hook_field_storage_write().
 */
function `!p snip.rv = snip.basename`_field_storage_write($entity_type, $entity, $op, $fields)
{
	list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);
	$etid = _field_sql_storage_etid($entity_type);
	foreach ($fields as $field_id) {
		${1:/* Your code here */}
	}
}
endsnippet

snippet h_field_storage_delete "h_field_storage_delete"
/**
 * Implements hook_field_storage_delete().
 */
function `!p snip.rv = snip.basename`_field_storage_delete($entity_type, $entity, $fields)
{
	list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);
	$etid = _field_sql_storage_etid($entity_type);
	foreach (field_info_instances($entity_type, $bundle) as $instance) {
		${1:/* Your code here */}
	}
}
endsnippet

snippet h_field_storage_delete_revision "h_field_storage_delete_revision"
/**
 * Implements hook_field_storage_delete_revision().
 */
function `!p snip.rv = snip.basename`_field_storage_delete_revision($entity_type, $entity, $fields)
{
	list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);
	$etid = _field_sql_storage_etid($entity_type);
	if (isset($vid)) {
		foreach ($fields as $field_id) {
			${1:/* Your code here */}
		}
	}
}
endsnippet

snippet h_field_storage_query "h_field_storage_query"
/**
 * Implements hook_field_storage_query().
 */
function `!p snip.rv = snip.basename`_field_storage_query($query)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_storage_create_field "h_field_storage_create_field"
/**
 * Implements hook_field_storage_create_field().
 */
function `!p snip.rv = snip.basename`_field_storage_create_field($field)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_storage_delete_field "h_field_storage_delete_field"
/**
 * Implements hook_field_storage_delete_field().
 */
function `!p snip.rv = snip.basename`_field_storage_delete_field($field)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_storage_delete_instance "h_field_storage_delete_instance"
/**
 * Implements hook_field_storage_delete_instance().
 */
function `!p snip.rv = snip.basename`_field_storage_delete_instance($instance)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_storage_pre_load "h_field_storage_pre_load"
/**
 * Implements hook_field_storage_pre_load().
 */
function `!p snip.rv = snip.basename`_field_storage_pre_load($entity_type, $entities, $age, &$skip_fields, $options)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_storage_pre_insert "h_field_storage_pre_insert"
/**
 * Implements hook_field_storage_pre_insert().
 */
function `!p snip.rv = snip.basename`_field_storage_pre_insert($entity_type, $entity, &$skip_fields)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_storage_pre_update "h_field_storage_pre_update"
/**
 * Implements hook_field_storage_pre_update().
 */
function `!p snip.rv = snip.basename`_field_storage_pre_update($entity_type, $entity, &$skip_fields)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_info_max_weight "h_field_info_max_weight"
/**
 * Implements hook_field_info_max_weight().
 */
function `!p snip.rv = snip.basename`_field_info_max_weight($entity_type, $bundle, $context)
{
	$weights = array();
	${1:/* Your code here */}
	return $weights ? max($weights) : NULL;
}
endsnippet

snippet h_field_display_alter "h_field_display_alter"
/**
 * Implements hook_field_display_alter().
 */
function `!p snip.rv = snip.basename`_field_display_alter(&$display, $context)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_display_ENTITY_TYPE_alter "h_field_display_ENTITY_TYPE_alter"
/**
 * Implements hook_field_display_ENTITY_TYPE_alter().
 */
function `!p snip.rv = snip.basename`_field_display_ENTITY_TYPE_alter(&$display, $context)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_extra_fields_display_alter "h_field_extra_fields_display_alter"
/**
 * Implements hook_field_extra_fields_display_alter().
 */
function `!p snip.rv = snip.basename`_field_extra_fields_display_alter(&$displays, $context)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_create_field "h_field_create_field"
/**
 * Implements hook_field_create_field().
 */
function `!p snip.rv = snip.basename`_field_create_field($field)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_create_instance "h_field_create_instance"
/**
 * Implements hook_field_create_instance().
 */
function `!p snip.rv = snip.basename`_field_create_instance($instance)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_update_forbid "h_field_update_forbid"
/**
 * Implements hook_field_update_forbid().
 */
function `!p snip.rv = snip.basename`_field_update_forbid($field, $prior_field, $has_data)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_update_field "h_field_update_field"
/**
 * Implements hook_field_update_field().
 */
function `!p snip.rv = snip.basename`_field_update_field($field, $prior_field, $has_data)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_delete_field "h_field_delete_field"
/**
 * Implements hook_field_delete_field().
 */
function `!p snip.rv = snip.basename`_field_delete_field($field)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_update_instance "h_field_update_instance"
/**
 * Implements hook_field_update_instance().
 */
function `!p snip.rv = snip.basename`_field_update_instance($instance, $prior_instance)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_delete_instance "h_field_delete_instance"
/**
 * Implements hook_field_delete_instance().
 */
function `!p snip.rv = snip.basename`_field_delete_instance($instance)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_read_field "h_field_read_field"
/**
 * Implements hook_field_read_field().
 */
function `!p snip.rv = snip.basename`_field_read_field(&$field)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_read_instance "h_field_read_instance"
/**
 * Implements hook_field_read_instance().
 */
function `!p snip.rv = snip.basename`_field_read_instance($instance)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_purge_field "h_field_purge_field"
/**
 * Implements hook_field_purge_field().
 */
function `!p snip.rv = snip.basename`_field_purge_field($field)
{
	db_delete('${1}')
		->condition('id', $field['id'])
		->execute();
}
endsnippet

snippet h_field_purge_field_instance "h_field_purge_field_instance"
/**
 * Implements hook_field_purge_field_instance().
 */
function `!p snip.rv = snip.basename`_field_purge_field_instance($instance)
{
	db_delete('${1}')
		->condition('id', $instance['id'])
		->execute();
}
endsnippet

snippet h_field_storage_purge_field "h_field_storage_purge_field"
/**
 * Implements hook_field_storage_purge_field().
 */
function `!p snip.rv = snip.basename`_field_storage_purge_field($field)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_field_storage_purge_field_instance "h_field_storage_purge_field_instance"
/**
 * Implements hook_field_storage_purge_field_instance().
 */
function `!p snip.rv = snip.basename`_field_storage_purge_field_instance($instance)
{
	db_delete('${1}')
		->condition('id', $instance['id'])
		->execute();
}
endsnippet

snippet h_field_storage_purge "h_field_storage_purge"
/**
 * Implements hook_field_storage_purge().
 */
function `!p snip.rv = snip.basename`_field_storage_purge($entity_type, $entity, $field, $instance)
{
	list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);
	${1:/* Your code here */}
}
endsnippet

snippet h_field_access "h_field_access"
/**
 * Implements hook_field_access().
 */
function `!p snip.rv = snip.basename`_field_access($op, $field, $entity_type, $entity, $account)
{
	${1:/* Your code here */}
	return TRUE;
}
endsnippet

snippet h_options_list "h_options_list"
/**
 * Implements hook_options_list().
 */
function `!p snip.rv = snip.basename`_options_list($field)
{
	 $options = array(
		 ${1} => ${2},
	 );
	return $options;
}
endsnippet

snippet h_contextual_links_view_alter "h_contextual_links_view_alter"
/**
 * Implements hook_contextual_links_view_alter().
 */
function `!p snip.rv = snip.basename`_contextual_links_view_alter(&$element, $items)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_dashboard_regions "h_dashboard_regions"
/**
 * Implements hook_dashboard_regions().
 */
function `!p snip.rv = snip.basename`_dashboard_regions()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_dashboard_regions_alter "h_dashboard_regions_alter"
/**
 * Implements hook_dashboard_regions_alter().
 */
function `!p snip.rv = snip.basename`_dashboard_regions_alter($regions)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_menu_insert "h_menu_insert"
/**
 * Implements hook_menu_insert().
 */
function `!p snip.rv = snip.basename`_menu_insert($menu)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_menu_update "h_menu_update"
/**
 * Implements hook_menu_update().
 */
function `!p snip.rv = snip.basename`_menu_update($menu)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_menu_delete "h_menu_delete"
/**
 * Implements hook_menu_delete().
 */
function `!p snip.rv = snip.basename`_menu_delete($menu)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_path_insert "h_path_insert"
/**
 * Implements hook_path_insert().
 */
function `!p snip.rv = snip.basename`_path_insert($path)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_path_update "h_path_update"
/**
 * Implements hook_path_update().
 */
function `!p snip.rv = snip.basename`_path_update($path)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_path_delete "h_path_delete"
/**
 * Implements hook_path_delete().
 */
function `!p snip.rv = snip.basename`_path_delete($path)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_shortcut_default_set "h_shortcut_default_set"
/**
 * Implements hook_shortcut_default_set().
 */
function `!p snip.rv = snip.basename`_shortcut_default_set($account)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_image_effect_info "h_image_effect_info"
/**
 * Implements hook_image_effect_info().
 */
function `!p snip.rv = snip.basename`_image_effect_info()
{
	$effects = array();
	$effects['${1}'] = array(
		'label' => t('${2}'),
		'help' => t('${3}'),
		'effect callback' => '${4}',
		'form callback' => '${5}',
		'summary theme' => '${6}',
	);
	return $effects;
}
endsnippet

snippet h_image_effect_info_alter "h_image_effect_info_alter"
/**
 * Implements hook_image_effect_info_alter().
 */
function `!p snip.rv = snip.basename`_image_effect_info_alter(&$effects)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_image_style_save "h_image_style_save"
/**
 * Implements hook_image_style_save().
 */
function `!p snip.rv = snip.basename`_image_style_save($style)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_image_style_delete "h_image_style_delete"
/**
 * Implements hook_image_style_delete().
 */
function `!p snip.rv = snip.basename`_image_style_delete($style)
{
	 ${1:/* Your code here */}
}
endsnippet

snippet h_image_style_flush "h_image_style_flush"
/**
 * Implements hook_image_style_flush().
 */
function `!p snip.rv = snip.basename`_image_style_flush($style)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_image_styles_alter "h_image_styles_alter"
/**
 * Implements hook_image_styles_alter().
 */
function `!p snip.rv = snip.basename`_image_styles_alter(&$styles)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_image_default_styles "h_image_default_styles"
/**
 * Implements hook_image_default_styles().
 */
function `!p snip.rv = snip.basename`_image_default_styles()
{
	$styles = array();
	$styles['${1}'] = array(
		'effects' => array(
			array(
				'name' => '${2}',
				'data' => array('width' => ${3}, 'height' => ${4}, 'upscale' => ${5}),
				'weight' => ${6},
			),
		),
	);
	return $styles;
}
endsnippet

snippet h_trigger_info "h_trigger_info"
/**
 * Implements hook_trigger_info().
 */
function `!p snip.rv = snip.basename`_trigger_info()
{
	return array(
		'${1}' => array(
			'${2}' => array(
				'label' => t('${3}'),
			),
		),
	);
}
endsnippet

snippet h_trigger_info_alter "h_trigger_info_alter"
/**
 * Implements hook_trigger_info_alter().
 */
function `!p snip.rv = snip.basename`_trigger_info_alter(&$triggers)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_search_info "h_search_info"
/**
 * Implements hook_search_info().
 */
function `!p snip.rv = snip.basename`_search_info()
{
	return array(
		'title' => '${1}',
		'path' => '${2}',
		'conditions_callback' => '${3}',
	);
}
endsnippet

snippet h_search_access "h_search_access"
/**
 * Implements hook_search_access().
 */
function `!p snip.rv = snip.basename`_search_access()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_search_reset "h_search_reset"
/**
 * Implements hook_search_reset().
 */
function `!p snip.rv = snip.basename`_search_reset()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_search_status "h_search_status"
/**
 * Implements hook_search_status().
 */
function `!p snip.rv = snip.basename`_search_status()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_search_admin "h_search_admin"
/**
 * Implements hook_search_admin().
 */
function `!p snip.rv = snip.basename`_search_admin()
{
	$form['${1}']${2} = array(
		'#title' => t('${3}'),
		'#type' => '${4}',
		'#theme' => '${5}',
		'#default_value' => ${6},${7}
	return $form;
}
endsnippet

snippet h_search_execute "h_search_execute"
/**
 * Implements hook_search_execute().
 */
function `!p snip.rv = snip.basename`_search_execute($keys = NULL, $conditions = NULL)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_search_page "h_search_page"
/**
 * Implements hook_search_page().
 */
function `!p snip.rv = snip.basename`_search_page($results)
{
	$output['prefix']['#markup'] = '<ol class="search-results">';
	foreach ($results as $entry) {
		$output[] = array(
			'#theme' => '${1}',
			'#result' => $entry,
			'#module' => '${2}',
		);
	}
	$output['suffix']['#markup'] = '</ol>' . theme('pager');
	return $output;
}
endsnippet

snippet h_search_preprocess "h_search_preprocess"
/**
 * Implements hook_search_preprocess().
 */
function `!p snip.rv = snip.basename`_search_preprocess($text)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_update_index "h_update_index"
/**
 * Implements hook_update_index().
 */
function `!p snip.rv = snip.basename`_update_index()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_locale "h_locale"
/**
 * Implements hook_locale().
 */
function `!p snip.rv = snip.basename`_locale($op = 'groups')
{
	switch ($op) {
		case '${1}':
			return array('${2}' => t('${3}'));
	}
}
endsnippet

snippet h_language_init "h_language_init"
/**
 * Implements hook_language_init().
 */
function `!p snip.rv = snip.basename`_language_init()
{
	global $language, $conf;
	switch ($language->language) {
		case '${1}':
			$conf['${2}'] = '${3}';
			break;
	}
}
endsnippet

snippet h_language_switch_links_alter "h_language_switch_links_alter"
/**
 * Implements hook_language_switch_links_alter().
 */
function `!p snip.rv = snip.basename`_language_switch_links_alter(array &$links, $type, $path)
{
	global $language;
	${1:/* Your code here */}
}
endsnippet

snippet h_language_types_info "h_language_types_info"
/**
 * Implements hook_language_types_info().
 */
function `!p snip.rv = snip.basename`_language_types_info()
{
	return array(
		'${1}' => array(
			'name' => t('${2}'),
			'description' => t('${3}'),
		),
	);
}
endsnippet

snippet h_language_types_info_alter "h_language_types_info_alter"
/**
 * Implements hook_language_types_info_alter().
 */
function `!p snip.rv = snip.basename`_language_types_info_alter(array &$language_types)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_language_negotiation_info "h_language_negotiation_info"
/**
 * Implements hook_language_negotiation_info().
 */
function `!p snip.rv = snip.basename`_language_negotiation_info()
{
	return array(
		'${1}' => array(
			'callbacks' => array(
				'language' => '${2}',
				'switcher' => '${3}',
				'url_rewrite' => '${4}',
			),
			'file' => drupal_get_path('module', '${5}') . '/${6}',
			'weight' => ${7},
			'types' => array('${8}'),
			'name' => t('${9}'),
			'description' => t('${10}'),
			'cache' => ${11},
		),
	);
}
endsnippet

snippet h_language_negotiation_info_alter "h_language_negotiation_info_alter"
/**
 * Implements hook_language_negotiation_info_alter().
 */
function `!p snip.rv = snip.basename`_language_negotiation_info_alter(array &$language_providers)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_multilingual_settings_changed "h_multilingual_settings_changed"
/**
 * Implements hook_multilingual_settings_changed().
 */
function `!p snip.rv = snip.basename`_multilingual_settings_changed()
{
	${1:/* Your code here */}
}
endsnippet

snippet h_language_fallback_candidates_alter "h_language_fallback_candidates_alter"
/**
 * Implements hook_language_fallback_candidates_alter().
 */
function `!p snip.rv = snip.basename`_language_fallback_candidates_alter(array &$fallback_candidates)
{
	${1:/* Your code here */}
}
endsnippet

snippet h_update_N "h_update_N"
/**
 * Implements hook_update_N().
 */
function `!p snip.rv = snip.basename`_update_${1:/* Update number */}(&$sandbox = NULL)
{
	$ret = t('${2:/* Message */}');
	${3:/* Your code here */}
	return $ret;
}
endsnippet
