#!/usr/bin/env python3
"""
due.py
Python 2 script for todo.txt add-on
Created by Rebecca Morgan 2017-03-10
Copyright (c) 2017 Rebecca Morgan. All rights reserved.

Edits by Steve Winslow 2017-06-25
Edits copyright (c) 2017 Steve Winslow. Licensed under MIT.
Edits copyright (c) 2017 Sanpi. Licensed under MIT.
"""

import os
import sys
from datetime import datetime, timedelta
import re

def main(todo_file, future_days=0):
    # Prepare lists to store tasks
    overdue = list()
    due_today = list()
    due_future = list()
    tasks_with_date = list()

    # Open todo.txt file
    with open(todo_file, 'r') as f:
        content = f.readlines()
        date = datetime.today()

        # Loop through content and look for due dates, assuming the key due:
        # is used and standard date format
        for i, task in enumerate(content):
            match = re.search(r'due:\d{4}-\d{2}-\d{2}', task)

            if match is not None:
                date = datetime.strptime(match.group()[4:], '%Y-%m-%d').date()
                tasks_with_date.append((i, task, date))

        # Sort tasks that match due: regex by date
        sorted_tasks = sorted(tasks_with_date, key=lambda tup: tup[2])

        # Append to relevant lists for output
        for task in sorted_tasks:
            # Add matching tasks to list with line number
            if task[2] < datetime.today().date():
                overdue.append(str(task[0]+1).zfill(2) + " " + task[1])
            elif task[2] == datetime.today().date():
                due_today.append(str(task[0]+1).zfill(2) + " " + task[1])
            elif task[2] < datetime.today().date() + timedelta(days=future_days + 1):
                due_future.append(str(task[0]+1).zfill(2) + " " + task[1])

        print_task(overdue, due_today, due_future, future_days)

def print_task(overdue, due_today, due_future, future_days):
    if len(overdue) > 0:
        print("===============================")
        print("Overdue tasks:")
        print("===============================")
        for task in overdue:
            print(task, end='')
    if len(due_today) > 0:
        print("\n===============================")
        print("Tasks due today:")
        print("===============================")
        for task in due_today:
            print(task, end='')
    if len(due_future) > 0:
        print("\n===============================")
        print("Tasks due in the next " + str(future_days) + " days:")
        print("===============================")
        for task in due_future:
            print(task, end='')

if __name__ == '__main__':
    if len(sys.argv) < 1 or len(sys.argv) > 3:
        print("Usage: due.py <future_days>")
        sys.exit(1)

    todo_file = os.environ['TODO_FILE']
    if len(sys.argv) is 3:
        main(todo_file, int(sys.argv[2]))
    else:
        main(todo_file)
