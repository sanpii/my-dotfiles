snippet sfbundle
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\U*\>\\\?\)*', '', '')`;

	use Symfony\Component\HttpKernel\Bundle\Bundle;

	class `Filename()` extends Bundle
	{
	}
snippet sfclass
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\U*\>\\\?\)*', '', '')`;

	class `Filename()`
	{
		${1}
	}
snippet sfctrl
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\U*\>\\\?\)*', '', '')`;

	use Symfony\Component\HttpFoundation\Request;
	use Symfony\Bundle\FrameworkBundle\Controller\Controller;
	use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;
	use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter;

	class `Filename()` extends Controller
	{
		${1}
	}
snippet sfaction
	/**
	 * @Template()
	 */
	public function ${1}Action(${2})
	{
		${3}
	}
snippet sfinterface
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\U*\>\\\?\)*', '', '')`;

	interface `Filename()`
	{
		${1}
	}
snippet sftestcase
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\U*\>\\\?\)*', '', '')`;

	class `Filename()` extends \PHPUnit_Framework_TestCase
	{
		${1}
	}
snippet sfentity
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\U*\>\\\?\)*', '', '')`;

	use Doctrine\ORM\Mapping as ORM;
	// use Symfony\Component\Validator\Constraints as Assert;

	/**
	 * @ORM\Entity
	 *
	 * @ORM\Table(name="`tolower(Filename())`")
	 */
	class `Filename()`
	{
		/**
		 * @ORM\Id
		 * @ORM\GeneratedValue(strategy="AUTO")
		 * @ORM\Column(type="integer")
		 */
		private $id;

		${1}
	}
snippet sftype
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\U*\>\\\?\)*', '', '')`;

	use Symfony\Component\Form\AbstractType;
	use Symfony\Component\Form\FormBuilder;

	class `Filename()` extends AbstractType
	{
		/**
		 * {@inheritDoc}
		 */
		public function buildForm(FormBuilder $builder, array $options)
		{
			$builder
				->add('${2}')
			;
		}

		/**
		 * {@inheritDoc}
		 */
		public function getName()
		{
			return '${1}';
		}
	}
snippet sfcommand
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\U*\>\\\?\)*', '', '')`;

	use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand;
	use Symfony\Component\Console\Input\InputInterface;
	use Symfony\Component\Console\Input\InputArgument;
	use Symfony\Component\Console\Input\InputOption;
	use Symfony\Component\Console\Output\OutputInterface;

	class `Filename()` extends ContainerAwareCommand
	{
		/**
		 * {@inheritDoc}
		 */
		protected function configure()
		{
			$this
				->setName('${1}')
				// ->setDescription()
				// ->setHelp()
				// add some arguments:
				// ->addArgument($name, $mode = null, $description = '', $default = null)
				// and options:
				// ->addOption($name, $shortcut = null, $mode = null, $description = '', $default = null)
			;
		}

		/**
		 * {@inheritDoc}
		 */
		protected function execute(InputInterface $input, OutputInterface $output)
		{
			${2}
		}
	}
snippet sfdf
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\U*\>\\\?\)*', '', '')`;

	use Doctrine\Common\Persistence\ObjectManager;
	use Doctrine\Common\DataFixtures\FixtureInterface;

	class `Filename()` implements FixtureInterface
	{
		public function load(ObjectManager $em)
		{
			${1}
		}
	}
snippet sfdfo
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\U*\>\\\?\)*', '', '')`;

	use Doctrine\Common\Persistence\ObjectManager;
	use Doctrine\Common\DataFixtures\AbstractFixture;
	use Doctrine\Common\DataFixtures\OrderedFixtureInterface;

	class `Filename()` extends AbstractFixture implements OrderedFixtureInterface
	{
		public function load(ObjectManager $em)
		{
			${2}
		}

		public function getOrder()
		{
			return ${1};
		}
snippet sftwig
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\U*\>\\\?\)*', '', '')`;

	use Twig_Extension;
	use Twig_Filter_Method;
	use Twig_Function_Method;

	class `Filename()` extends Twig_Extension
	{
		public function getFilters()
		{
			return array(
				'${2}' => new Twig_Filter_Method($this, '${2}Filter'),
			);
		}

		public function ${2}Filter(${3})
		{
			${4}
		}

		public function getName()
		{
			return '${1}';
		}
	}
snippet sfdic
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\U*\>\\\?\)*', '', '')`;

	use Symfony\Component\DependencyInjection\ContainerBuilder;
	use Symfony\Component\DependencyInjection\Loader\YamlFileLoader;
	use Symfony\Component\HttpKernel\DependencyInjection\Extension;
	use Symfony\Component\Config\FileLocator;

	class `Filename()` extends Extension
	{
		public function load(array $configs, ContainerBuilder $container)
		{
			$loader = new YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));
			$loader->load('${2:services.yml}');
		}

		public function getAlias()
		{
			return '${1}';
		}
	}
