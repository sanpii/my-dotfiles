[init]
	templatedir = ~/.config/git/templates
[user]
	name = Sanpi
	email = sanpi@homecomputing.fr
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[core]
	editor = vim
	whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = ~/.config/git/ignore
[alias]
	a = add
	b = branch -vv
	d = diff
	h = help
	s = status -sb
	t = tag
	ad = add
	ci = commit -v -m
	co = checkout
	dc = diff --cached
	fc = !vim $(git ls-files -u | cut -f2 | uniq | xargs echo)
	lg = log --decorate --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	lo = log --stat
	st = status
	new = !sh -c 'git log "$@" @{1}..@{0}'
	vim = !vim $(git ls-files -m -z | xargs -0 echo)
	info = !~/.config/git/contrib/git-info
	amend = commit --amend -C HEAD
	serve = daemon --reuseaddr --verbose --base-path=. --export-all ./.git
	vimall = !vim $(git ls-files -m -o --exclude-standard -z | xargs -0 echo)
	standup = "!git log --since yesterday --author "$(git config user.email)" --pretty=short"
	svn-update = !sh -c 'git stash save "Pre svn-up stash" && git svn rebase && git stash pop'
	svn-commit = !sh -c 'git stash save "Pre svn-commit stash" && git svn dcommit && git stash pop'
	fix-conflits = !vim $(git ls-files -u | cut -f2 | uniq | xargs echo)
	create = "!f(){ git init \"$@\"; if [ -n \"$@\" ]; then cd \"$@\"; fi; git commit --allow-empty -m 'Initial commit'; };f"
[pager]
	log = perl  /usr/share/doc/git/contrib/diff-highlight/diff-highlight | less
	show = perl /usr/share/doc/git/contrib/diff-highlight/diff-highlight | less
	diff = perl /usr/share/doc/git/contrib/diff-highlight/diff-highlight | less
[include]
	path = .gitconfig.local
[rerere]
	enabled = 1
[merge]
	tool = splice
	ff = no
[mergetool "splice"]
	cmd = "vim -f $BASE $LOCAL $REMOTE $MERGED -c 'SpliceInit'"
	trustExitCode = true
[branch]
	autosetuprebase = always
[push]
	default = simple
